AWSTemplateFormatVersion: 2010-09-09
Description: Lambda function that check latest document in indices for (esimport)
Parameters:
  DeployS3Bucket:
    Description: S3 bucket name with lambda function code
    Type: String
  LambdaS3Key:
    Description: S3 key that point to zip archive with function code
    Type: String
  EsUrl:
    Description: list of URLs that point to ElasticSearch cluster
    Type: String
  LookBackForXMinutes:
    Description: For how much minutes function will be looking back to find latest document
    Type: Number
  SentryDsn:
    Description: DSN for Sentry service
    Type: String
  DatadogAPIKey:
    Description: API key for Datadog service
    Type: String
  DataDogEnv:
    Description: String that will be passed to  Datadog service as `host_name` param value
    Type: String
  LogLevel:
    Description: Log level for lambda function
    Type: String
    Default: 'INFO'


Resources:
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'esimport-datadog-${AWS::StackName}'
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt
        - EsimportDatadogTrigger
        - Arn
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'lambda-role-${AWS::StackName}'
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute


  LambdaEsimportDatadog:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'esimport-datadog-${AWS::StackName}'
      Description: esimport logger to Datadog
      Runtime: python3.8
      Code:
        S3Bucket: !Ref DeployS3Bucket
        S3Key: !Ref LambdaS3Key
      Handler: esimport_datadog.lambda_handler
      MemorySize: 128
      Timeout: 30
      Role:
        Fn::GetAtt:
          - LambdaRole
          - Arn
      Environment:
        Variables:
          ES_URL: !Ref EsUrl
          SENTRY_DSN: !Ref SentryDsn
          DATADOG_API_KEY: !Ref DatadogAPIKey
          DATADOG_ENV: !Ref DataDogEnv
          LOOK_BACK_FOR_X_MINUTES: !Ref LookBackForXMinutes
          LOG_LEVEL: !Ref LogLevel


  EsimportDatadogTrigger:
    Type: AWS::Events::Rule
    DependsOn: LambdaEsimportDatadog
    Properties:
      Description: Trigger esimport-datadog function
      Name: !Sub 'DatadogTrigger-${AWS::StackName}'
      ScheduleExpression: cron(1/3 * * * ? *)
      State: 'ENABLED'
      Targets:
        - Arn: !GetAtt
          - LambdaEsimportDatadog
          - Arn
          Id: esimport_datadog_logger_trigger


Outputs:
  LambdaRoleARN:
    Value: !GetAtt [LambdaRole, Arn]
    Description: Role ARN that should be used as principal in ElasticSearch domain Access Policy config, example below

