AWSTemplateFormatVersion: 2010-09-09
Description: ESImportECS
Parameters:
  ImageId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
  ESImportEcrRepositoryUri:
    Description: ECR repository uri
    Default: 684643752294.dkr.ecr.us-west-2.amazonaws.com/eleven
    Type: String
  ESImportImageTag:
    Description: Image Tag
    Default: esimport
    Type: String
  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: Select a VPC that allows instances to access the Internet.
  PrivateSubnetIds:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: Select at least two private subnets in your selected VPC.
  DesiredCapacity:
    Type: Number
    Default: "1"
    Description: Number of instances to launch in your ECS cluster.
  MaxSize:
    Type: Number
    Default: "1"
    Description: Maximum number of instances that can be launched in your ECS cluster.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
      - t2.large
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: Please choose a valid instance type.
  Memory:
    Type: Number
    Default: "512"
    Description: Docker Memory.
Resources:
  ESImportEcsCluster:
    Type: "AWS::ECS::Cluster"
  EcsClusterDefaultAsgSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: >-
        ESImportEcsStack/EcsCluster/DefaultAutoScalingGroup/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: ESImportEcsStack/EcsCluster/DefaultAutoScalingGroup
      VpcId: !Ref VpcId
  EcsClusterDefaultAsgRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: 2012-10-17
      Tags:
        - Key: Name
          Value: ESImportEcsStack/EcsCluster/DefaultAutoScalingGroup
  EcsClusterDefaultAsgPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "ecs:DeregisterContainerInstance"
              - "ecs:RegisterContainerInstance"
              - "ecs:Submit*"
            Effect: Allow
            Resource: !GetAtt
              - ESImportEcsCluster
              - Arn
          - Action:
              - "ecs:Poll"
              - "ecs:StartTelemetrySession"
            Condition:
              ArnEquals:
                "ecs:cluster": !GetAtt
                  - ESImportEcsCluster
                  - Arn
            Effect: Allow
            Resource: "*"
          - Action:
              - "ecr:GetAuthorizationToken"
              - "ecs:DiscoverPollEndpoint"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Effect: Allow
            Resource: "*"
        Version: 2012-10-17
      PolicyName: EcsClusterDefaultAsgPolicy
      Roles:
        - !Ref EcsClusterDefaultAsgRole
  EcsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref EcsClusterDefaultAsgRole
  EcsClusterLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EcsInstanceProfile
      SecurityGroups:
        - !GetAtt
          - EcsClusterDefaultAsgSG
          - GroupId
      UserData: !Base64
        "Fn::Join":
          - ""
          - - |-
              #!/bin/bash
              echo ECS_CLUSTER=
            - !Ref ESImportEcsCluster
            - >2-
               >> /etc/ecs/ecs.config
              sudo iptables --insert FORWARD 1 --in-interface docker+
              --destination 169.254.169.254/32 --jump DROP

              sudo service iptables save

              echo ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config
    DependsOn:
      - EcsClusterDefaultAsgPolicy
      - EcsClusterDefaultAsgRole
  EcsClusterDefaultASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      MinSize: "1"
      MaxSize: !Ref MaxSize
      DesiredCapacity: !Ref DesiredCapacity
      LaunchConfigurationName: !Ref EcsClusterLaunchConfig
      Tags:
        - Key: Name
          PropagateAtLaunch: true
          Value: ESImportEcsStack/EcsCluster/DefaultAutoScalingGroup
      VPCZoneIdentifier: !Ref PrivateSubnetIds
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
  TaskDefRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
  ESImportTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - redis-server
            - --save ""
            - --appendonly no
          Essential: true
          Image: redis:5-alpine
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 800
          Name: redis
        - Command:
            - esimport
            - sync
            - accounts
          Essential: true
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: accounts
        - Command:
            - esimport
            - sync
            - conferences
          Essential: true
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: conferences
        - Command:
            - esimport
            - sync
            - devices
          Essential: true
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: devices
        - Command:
            - esimport
            - sync
            - properties
          Essential: true
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: properties
        - Command:
            - esimport
            - sync
            - sessions
          Essential: true
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: sessions
        - Command:
            - esimport
            - sync
            - sessions_current
          Essential: false
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: sessions-current
        - Command:
            - esimport
            - sync
            - sessions_ppk
          Essential: false
          Image: !Join
            - ""
            - - !Ref ESImportEcrRepositoryUri
              - ":"
              - !Ref ESImportImageTag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ESImportTaskLogGroup
              awslogs-stream-prefix: ESImportTaskLogGroup
              awslogs-region: !Ref AWS::Region
          MemoryReservation: 400
          Name: sessions-ppk
      ExecutionRoleArn:
        Fn::GetAtt:
          - TaskDefExecutionRole
          - Arn
      Family: ESImportEcsStack
      NetworkMode: bridge
      RequiresCompatibilities:
        - EC2
      TaskRoleArn:
        Fn::GetAtt:
          - TaskDefRole
          - Arn
  ESImportTaskLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      RetentionInDays: 1
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  TaskDefExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
  TaskDefExecutionRoleDefaultPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
            Effect: Allow
            Resource: !Join
              - ""
              - - "arn:"
                - !Ref "AWS::Partition"
                - ":ecr:*:"
                - !Select
                  - 0
                  - !Split
                    - .
                    - !Ref ESImportEcrRepositoryUri
                - ":repository/"
                - !Select
                  - 1
                  - !Split
                    - /
                    - !Ref ESImportEcrRepositoryUri
          - Action: "ecr:GetAuthorizationToken"
            Effect: Allow
            Resource: "*"
          - Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Effect: Allow
            Resource: !GetAtt
              - ESImportTaskLogGroup
              - Arn
        Version: 2012-10-17
      PolicyName: TaskDefExecutionRoleDefaultPolicy
      Roles:
        - !Ref TaskDefExecutionRole
  ESImportEcsService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ESImportEcsCluster
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      EnableECSManagedTags: false
      LaunchType: EC2
      SchedulingStrategy: DAEMON
      TaskDefinition: !Ref ESImportTask
