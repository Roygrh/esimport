AWSTemplateFormatVersion: 2010-09-09
Description: IAM Policy for ESImport Stack Deployment
Parameters:
  UserName:
    Type: String
    Default: esimport-deploy-user
  SamArtifactBucketEast:
    Type: String
    Default: lambda-artifacts-11
  SamArtifactBucketWest:
    Type: String
    Default: eleven-prod-lambda-artifacts
Resources:
  ESImportDeploymentPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'iam:GetRole'
              - 'iam:CreateRole'
              - 'iam:DeleteRole'
              - 'iam:AttachRolePolicy'
              - 'iam:PutRolePolicy'
              - 'iam:PassRole'
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:GetRolePolicy'
              - 'iam:CreateInstanceProfile'
              - 'iam:RemoveRoleFromInstanceProfile'
              - 'iam:AddRoleToInstanceProfile'
              - 'iam:DeleteInstanceProfile'
              - 'iam:CreateServiceLinkedRole'
              - 'iam:TagRole'
              - 'iam:GetInstanceProfile'
            Resource:
              - '*'
            Effect: Allow
            Sid: IAMPolicies
          - Action:
              - 'logs:DeleteLogGroup'
              - 'logs:CreateLogGroup'
              - 'logs:DeleteLogStream'
              - 'logs:PutLogEvents'
              - 'logs:CreateLogStream'
              - 'logs:PutRetentionPolicy'
              - 'logs:Describe*'
            Resource:
              - '*'
            Effect: Allow
            Sid: CloudWatchPermissions
          - Sid: SystemManagerPermissions
            Effect: Allow
            Action: 'ssm:GetParameters'
            Resource: '*'
          - Sid: Ec2Permissions
            Effect: Allow
            Action:
              - 'ec2:Describe*'
              - 'ec2:CreateLaunchTemplate'
              - 'ec2:DeleteLaunchTemplate'
              - 'ec2:CreateLaunchTemplateVersion'
              - 'ec2:DeleteSecurityGroup'
              - 'ec2:RevokeSecurityGroupIngress'
              - 'ec2:RevokeSecurityGroupEgress'
              - 'ec2:AuthorizeSecurityGroupIngress'
              - 'ec2:AuthorizeSecurityGroupEgress'
              - 'ec2:createTags'
              - 'ec2:CreateSecurityGroup'
              - 'ec2:RunInstances'
              - 'autoscaling:SuspendProcesses'
              - 'autoscaling:ResumeProcesses'
              # TODO: audit & remove this asg wildcard
              - 'autoscaling:*'
              - 'autoscaling:Attach*'
              - 'autoscaling:Detach*'
              - 'autoscaling:CreateLaunchConfiguration'
              - 'autoscaling:DeleteLaunchConfiguration'
              - 'autoscaling:Describe*'
              - 'autoscaling:CreateAutoScalingGroup'
              - 'autoscaling:DeleteAutoScalingGroup'
              - 'autoscaling:UpdateAutoScalingGroup'
            Resource: '*'
          - Sid: EcrPermissions
            Effect: Allow
            Action:
              - 'ecr:CompleteLayerUpload'
              - 'ecr:GetAuthorizationToken'
              - 'ecr:UploadLayerPart'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:PutImage'
            Resource: '*'
          - Sid: LoadBalancerPermissions
            Effect: Allow
            Action:
              - 'elasticloadbalancing:Describe*'
              - 'elasticloadbalancing:CreateTargetGroup'
              - 'elasticloadbalancing:DeleteTargetGroup'
              - 'elasticloadbalancing:CreateLoadBalancer'
              - 'elasticloadbalancing:DeleteLoadBalancer'
              - 'elasticloadbalancing:ModifyTargetGroupAttributes'
              - 'elasticloadbalancing:ModifyLoadBalancerAttributes'
              - 'elasticloadbalancing:CreateListener'
              - 'elasticloadbalancing:DeleteListener'
            Resource: '*'
          - Sid: EcsPermissions
            Effect: Allow
            Action:
              - 'ecs:Describe*'
              - 'ecs:CreateCluster'
              - 'ecs:DeleteCluster'
              - 'ecs:Submit*'
              - 'ecs:RegisterTaskDefinition'
              - 'ecs:DeregisterTaskDefinition'
              - 'ecs:CreateService'
              - 'ecs:DeleteService'
              - 'ecs:UpdateService'
            Resource: '*'
          - Sid: EventsPerm
            Effect: Allow
            Action:
              - 'events:DeleteRule'
              - 'events:DescribeEventBus'
              - 'events:DescribeRule'
              - 'events:DisableRule'
              - 'events:EnableRule'
              - 'events:ListRuleNamesByTarget'
              - 'events:ListRules'
              - 'events:ListTagsForResource'
              - 'events:ListTargetsByRule'
              - 'events:PutEvents'
              - 'events:PutPermission'
              - 'events:PutRule'
              - 'events:PutTargets'
              - 'events:RemovePermission'
              - 'events:RemoveTargets'
              - 'events:TestEventPattern'
            Resource: !Sub 'arn:aws:events:*:${AWS::AccountId}:rule/esimport*'
          - Effect: Allow
            Action:
              - "lambda:AddPermission"
              - "lambda:CreateFunction"
              - "lambda:DeleteFunction"
              - "lambda:GetFunction"
              - "lambda:GetFunctionConfiguration"
              - "lambda:ListTags"
              - "lambda:RemovePermission"
              - "lambda:TagResource"
              - "lambda:UntagResource"
              - "lambda:UpdateFunctionCode"
              - "lambda:UpdateFunctionConfiguration"
            Resource:
              - !Sub "arn:aws:lambda:*:${AWS::AccountId}:function:esimport*"
          - Effect: Allow
            Action:
              - "events:PutRule"
              - "events:EnableRule"
              - "events:DeleteRule"
              - "events:DescribeRule"
              - "events:PutTargets"
              - "events:RemoveTargets"
            Resource: "*"
          - Effect: Allow
            Action:
              - 'cloudformation:Describe*'
              - 'cloudformation:List*'
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:CreateStack'
              - 'cloudformation:GetTemplateSummary'
              - 'cloudformation:UpdateStack'
              - 'cloudformation:UpdateStackInstances'
              - 'cloudformation:UpdateStackSet'
              - 'cloudformation:ExecuteChangeSet'
            Resource: "arn:aws:cloudformation:*:aws:transform/Serverless-2016-10-31"
          - Effect: Allow
            Action:
              - "s3:CreateBucket"
              - "s3:GetObject"
              - "s3:PutObject"
            Resource:
              - !Sub "arn:aws:s3:::${SamArtifactBucketEast}/*"
              - !Sub "arn:aws:s3:::${SamArtifactBucketWest}/*"
  ESImportDeployServiceRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Ref ESImportDeploymentPolicy

  ESImportDeployUser:
    Type: AWS::IAM::User
    Properties: 
      Policies: 
        - PolicyName: esimport-deploy-user-permission
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: !GetAtt ESImportDeployServiceRole.Arn 
              - Effect: Allow
                Action:
                  - 'cloudformation:Describe*'
                  - 'cloudformation:List*'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:GetTemplateSummary'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:UpdateStackInstances'
                  - 'cloudformation:UpdateStackSet'
                  - 'cloudformation:ExecuteChangeSet'
                Resource: !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/esimport*"
              - Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:PutImage"
                  - "ecr:UploadLayerPart"
                  - "ecr:GetAuthorizationToken"
                Resource: "*"
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:CreateBucket"
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:s3:::${SamArtifactBucketEast}/*"
                  - !Sub "arn:aws:s3:::${SamArtifactBucketWest}/*"
                  - "arn:aws:s3:::esimport*"
      UserName: !Ref UserName

Outputs:
  ESImportDeployServiceRole:
    Value: !GetAtt ESImportDeployServiceRole.Arn
  DeployUserName:
    Value: !Ref ESImportDeployUser