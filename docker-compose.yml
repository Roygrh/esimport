# Copy this file into a docker-compose.yml file, and customize it to your needs
# Do not forget to also adjust your local_settings.py file accordingly 

version: '3'

services:

  localstack:
    image: localstack/localstack
    ports:
      # - "4567-4584:4567-4584"
      - "4566:4566"
      - "8081:8080"
    environment:
      - LOCALSTACK_SERVICES=s3,sns,dynamodb,sqs
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - DATA_DIR=/tmp/localstack/data
      - DEBUG=1
      
  
  esimport:
    container_name: esimport
    build: .
    env_file: .env
    links:
      - redis
      - localstack
      - mssql
    depends_on:
      - redis
      - localstack
      - mssql
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    entrypoint: bash
    volumes:
      - "./:/esimport"

  redis:
    image: "redis:alpine"
    container_name: esimport-redis
    logging:
      driver: none # disable redis logging for clearer testing readibility
    volumes:
      - 'redis:/var/lib/redis/data'
    ports:
      - '6379:6379'

  # elasticsearch:
  #   image: elasticsearch:5-alpine
  #   container_name: esimport-elasticsearch
  #   volumes:
  #     - 'elasticsearch:/usr/share/elasticsearch/data'
  #   ports:
  #     - '9200:9200'

  # Comment the following service if you want to use an external MS SQL Server
  # DistroDev has a shared SQL Server already loaded with some demo data you can use at:
  # ------------------------
  # HOST/IP: 54.214.70.162
  # Username: sa
  # Password: DistroDev@11
  # ------------------------
  # feel free to create your own DB within this server, e.g. Eleven_OS_YOURNAME
  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: esimport-mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=DistroDev@11
      # DB User is 'sa', and it does not need any enviornment variable
    ports:
      - '1433:1433'
    # Note: MsSQL Docker image does not support volumes on Mac machines, you might
    # need to comment volumes if you're using a Mac box.
    volumes:
      - './esimport/tests/fixtures/sql:/esimport/sql'
      - 'mssql:/var/opt/mssql'

  # If you prefer working with Kibana, uncomment this:
  # kibana:
  #   container_name: esimport-kibana
  #   image: kibana
  #   ports:
  #     - '5601:5601'

volumes:
  redis:
  mssql:
